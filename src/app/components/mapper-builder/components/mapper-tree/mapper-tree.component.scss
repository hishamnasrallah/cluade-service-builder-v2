// src/app/components/mapper-builder/components/mapper-tree/mapper-tree.component.scss

// Variables
$primary-color: #1976d2;
$accent-color: #ff4081;
$success-color: #4caf50;
$warning-color: #ff9800;
$error-color: #f44336;
$inactive-color: #9e9e9e;
$hover-bg: rgba(0, 0, 0, 0.04);
$selected-bg: rgba(25, 118, 210, 0.12);
$border-color: #e0e0e0;
$node-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

// Animations
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

.mapper-tree {
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: #fafafa;
}

.tree-header {
  padding: 12px 16px;
  background-color: white;
  border-bottom: 1px solid $border-color;
  display: flex;
  align-items: center;
  gap: 12px;

  .search-field {
    flex: 1;
    margin: 0;

    ::ng-deep .mat-form-field-wrapper {
      padding-bottom: 0;
    }

    ::ng-deep .mat-form-field-appearance-outline .mat-form-field-infix {
      padding: 8px 0;
    }
  }

  .tree-actions {
    display: flex;
    gap: 4px;
  }
}

.tree-container {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
  padding: 8px;

  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
  }

  &::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 4px;

    &:hover {
      background: #a1a1a1;
    }
  }
}

.mapper-hierarchy-tree {
  background: transparent;
}

.tree-node {
  margin: 2px 0;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  animation: slideIn 0.3s ease;

  &:hover {
    background-color: $hover-bg;

    .node-menu {
      opacity: 1;
    }
  }

  &.selected {
    background-color: $selected-bg;
    border-left: 3px solid $primary-color;

    .node-name {
      font-weight: 500;
      color: $primary-color;
    }
  }

  &.inactive {
    opacity: 0.6;

    .node-icon {
      color: $inactive-color !important;
    }

    .node-name {
      color: $inactive-color;
      text-decoration: line-through;
    }
  }

  &.has-errors {
    background-color: rgba($error-color, 0.05);
    border-left: 3px solid $error-color;

    &:hover {
      background-color: rgba($error-color, 0.08);
    }

    .node-name {
      color: $error-color;
    }
  }

  &.cut {
    opacity: 0.5;
    border: 2px dashed $primary-color;
  }

  &.cdk-drag-preview {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    background: white;
    border-radius: 8px;
    opacity: 0.9;
  }

  &.cdk-drag-placeholder {
    opacity: 0.2;
  }

  &.cdk-drag-animating {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }
}

.node-content {
  display: flex;
  align-items: center;
  padding: 8px 12px;
  min-height: 48px;
  gap: 8px;
}

.toggle-button {
  margin-right: 4px;

  .toggle-icon {
    transition: transform 0.2s ease;
  }
}

.node-icon {
  font-size: 20px;
  width: 20px;
  height: 20px;
  color: #666;
}

.node-info {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 2px;
  min-width: 0;

  .node-name {
    font-size: 14px;
    color: #333;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    &.error-text {
      color: $error-color;
      font-weight: 500;
    }
  }

  .node-model {
    font-size: 12px;
    color: #666;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-family: 'Roboto Mono', monospace;
  }

  .node-badges {
    display: flex;
    gap: 4px;
    margin-top: 4px;

    mat-chip {
      min-height: 20px;
      padding: 2px 8px;
      font-size: 11px;

      mat-icon {
        font-size: 14px;
        width: 14px;
        height: 14px;
        margin-right: 2px;
      }
    }

    .path-chip {
      background-color: #e3f2fd;
      color: $primary-color;
    }

    .rule-chip {
      background-color: #e8f5e9;
      color: $success-color;
    }
  }
}

.node-stats {
  display: flex;
  align-items: center;
  margin-right: 8px;

  mat-icon {
    font-size: 18px;
    color: #999;
  }

  ::ng-deep .mat-badge-content {
    font-size: 10px;
    width: 16px;
    height: 16px;
    line-height: 16px;
  }
}

.node-status {
  display: flex;
  align-items: center;
  margin-right: 8px;

  .status-icon {
    font-size: 18px;

    &[color="warn"] {
      animation: pulse 2s ease infinite;
    }
  }
}

.node-menu {
  opacity: 0;
  transition: opacity 0.2s ease;
}

.node-drag-preview {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  background-color: white;
  border-radius: 8px;
  box-shadow: $node-shadow;
  font-weight: 500;

  mat-icon {
    color: $primary-color;
  }

  ::ng-deep .mat-badge-content {
    background-color: $accent-color;
  }
}

// Drop indicators
.drop-above {
  border-top: 2px solid $primary-color;
  background-color: rgba($primary-color, 0.05);
}

.drop-below {
  border-bottom: 2px solid $primary-color;
  background-color: rgba($primary-color, 0.05);
}

.drop-inside {
  background-color: rgba($primary-color, 0.1);
  border: 2px dashed $primary-color;

  .node-content {
    padding-left: 32px;
  }
}

// Empty state
.empty-state {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 32px;
  text-align: center;

  .empty-content {
    margin-bottom: 48px;

    mat-icon {
      font-size: 64px;
      width: 64px;
      height: 64px;
      color: #ddd;
      margin-bottom: 16px;
    }

    h3 {
      margin: 0 0 8px 0;
      color: #424242;
      font-size: 20px;
    }

    p {
      margin: 0 0 24px 0;
      color: #666;
    }
  }

  .quick-start {
    background-color: white;
    border-radius: 8px;
    padding: 24px;
    box-shadow: $node-shadow;
    max-width: 400px;
    text-align: left;

    h4 {
      margin: 0 0 16px 0;
      color: #424242;
      font-size: 16px;
    }

    ol {
      margin: 0;
      padding-left: 0;
      list-style: none;

      li {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 12px;
        color: #666;
        font-size: 14px;

        mat-icon {
          color: $primary-color;
          font-size: 20px;
          width: 20px;
          height: 20px;
        }
      }
    }
  }
}

// Keyboard help
.keyboard-help {
  padding: 8px 16px;
  background-color: white;
  border-top: 1px solid $border-color;

  .shortcut-chips {
    display: flex;
    gap: 4px;
    flex-wrap: wrap;

    mat-chip {
      font-size: 11px;
      min-height: 24px;
      padding: 2px 8px;
      background-color: #f5f5f5;

      mat-icon {
        font-size: 14px;
        width: 14px;
        height: 14px;
        margin-right: 2px;
      }
    }
  }
}

// Global drag preview (outside component)
.drag-preview {
  position: fixed;
  pointer-events: none;
  z-index: 1000;
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  font-weight: 500;
}

// Menu customization
.delete-option {
  color: $error-color;
}

// Responsive
@media (max-width: 768px) {
  .tree-header {
    flex-direction: column;
    align-items: stretch;

    .search-field {
      width: 100%;
    }

    .tree-actions {
      justify-content: flex-end;
    }
  }

  .node-content {
    padding: 8px;
  }

  .node-info {
    .node-badges {
      display: none;
    }
  }

  .keyboard-help {
    display: none;
  }
}

// Dark mode support
@media (prefers-color-scheme: dark) {
  .mapper-tree {
    background-color: #121212;
  }

  .tree-header {
    background-color: #1e1e1e;
    border-bottom-color: #333;
  }

  .tree-node {
    &:hover {
      background-color: rgba(255, 255, 255, 0.05);
    }

    &.selected {
      background-color: rgba(25, 118, 210, 0.2);
    }

    &.has-errors {
      background-color: rgba($error-color, 0.1);
    }
  }

  .node-name {
    color: #e0e0e0;
  }

  .node-model {
    color: #999;
  }

  .empty-state {
    .quick-start {
      background-color: #1e1e1e;

      h4, li {
        color: #e0e0e0;
      }
    }
  }
}
